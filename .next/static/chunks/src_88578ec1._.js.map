{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alan/CodeTeak/AttendanceTracker/codeTeakMonitor/codeTeak-MonitorApp/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/alan/CodeTeak/AttendanceTracker/codeTeakMonitor/codeTeak-MonitorApp/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/alan/CodeTeak/AttendanceTracker/codeTeakMonitor/codeTeak-MonitorApp/src/components/dashboard/hours-today.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport type { EmployeeStatus } from \"@/lib/types\";\n\ninterface HoursTodayProps {\n    status: EmployeeStatus;\n    accumulatedTime: number; // in ms\n    sessionStart?: Date;\n    showSeconds?: boolean;\n}\n\nconst formatTime = (ms: number, showSeconds: boolean = false) => {\n    const safeMs = Math.max(0, ms);\n    const totalSeconds = Math.floor(safeMs / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    \n    if (showSeconds) {\n        const seconds = totalSeconds % 60;\n        return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    }\n    \n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n};\n\nexport function HoursToday({ status, accumulatedTime, sessionStart, showSeconds = false }: HoursTodayProps) {\n    const [elapsed, setElapsed] = useState(0);\n\n    useEffect(() => {\n        if (status !== 'Clocked In' || !sessionStart) {\n            setElapsed(0);\n            return;\n        }\n\n        const updateElapsed = () => {\n             const startTime = new Date(sessionStart).getTime();\n             setElapsed(new Date().getTime() - startTime);\n        }\n\n        updateElapsed();\n        const timer = setInterval(updateElapsed, 1000);\n        \n        return () => clearInterval(timer);\n    }, [status, sessionStart]);\n\n    const totalTimeToday = accumulatedTime + elapsed;\n\n    return <>{formatTime(totalTimeToday, showSeconds)}</>;\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAYA,MAAM,aAAa,CAAC,IAAY,cAAuB,KAAK;IACxD,MAAM,SAAS,KAAK,GAAG,CAAC,GAAG;IAC3B,MAAM,eAAe,KAAK,KAAK,CAAC,SAAS;IACzC,MAAM,QAAQ,KAAK,KAAK,CAAC,eAAe;IACxC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,eAAe,OAAQ;IAEnD,IAAI,aAAa;QACb,MAAM,UAAU,eAAe;QAC/B,OAAO,GAAG,OAAO,OAAO,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,OAAO,SAAS,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,OAAO,SAAS,QAAQ,CAAC,GAAG,MAAM;IACtH;IAEA,OAAO,GAAG,OAAO,OAAO,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,OAAO,SAAS,QAAQ,CAAC,GAAG,MAAM;AAClF;AAEO,SAAS,WAAW,EAAE,MAAM,EAAE,eAAe,EAAE,YAAY,EAAE,cAAc,KAAK,EAAmB;;IACtG,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACN,IAAI,WAAW,gBAAgB,CAAC,cAAc;gBAC1C,WAAW;gBACX;YACJ;YAEA,MAAM;sDAAgB;oBACjB,MAAM,YAAY,IAAI,KAAK,cAAc,OAAO;oBAChD,WAAW,IAAI,OAAO,OAAO,KAAK;gBACvC;;YAEA;YACA,MAAM,QAAQ,YAAY,eAAe;YAEzC;wCAAO,IAAM,cAAc;;QAC/B;+BAAG;QAAC;QAAQ;KAAa;IAEzB,MAAM,iBAAiB,kBAAkB;IAEzC,qBAAO;kBAAG,WAAW,gBAAgB;;AACzC;GAvBgB;KAAA","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///Users/alan/CodeTeak/AttendanceTracker/codeTeakMonitor/codeTeak-MonitorApp/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\n// This is now being pulled from environment variables\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\n// We check if an app is already initialized to prevent errors during hot-reloads\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { app, auth, db };\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;AAQ7C;AAPV;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,wCAAwC;AACxC,sDAAsD;AACtD,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,sBAAsB;AACtB,iFAAiF;AACjF,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///Users/alan/CodeTeak/AttendanceTracker/codeTeakMonitor/codeTeak-MonitorApp/src/components/dashboard/employee-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n  CardFooter,\n} from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Clock, LogIn, LogOut, Loader2, ClipboardCheck } from \"lucide-react\";\nimport type { Employee, Task } from \"@/lib/types\";\nimport { HoursToday } from \"./hours-today\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { getDistance } from \"@/lib/utils\";\nimport { auth, db } from \"@/lib/firebase\";\nimport { doc, onSnapshot, updateDoc, arrayUnion, increment } from \"firebase/firestore\";\nimport { onAuthStateChanged, type User } from \"firebase/auth\";\nimport { Skeleton } from \"../ui/skeleton\";\nimport { Badge } from \"../ui/badge\";\n\nconst OFFICE_COORDS = { latitude: 12.874256, longitude: 77.613996 };\nconst MAX_DISTANCE_METERS = 30;\n\nexport function EmployeeDashboard() {\n  const [user, setUser] = useState<User | null>(null);\n  const [employee, setEmployee] = useState<Employee | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isVerifyingLocation, setIsVerifyingLocation] = useState(false);\n  const [taskLog, setTaskLog] = useState(\"\");\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      if (!currentUser) {\n        setLoading(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    if (!user) return;\n\n    const docRef = doc(db, \"users\", user.uid);\n    const unsubscribe = onSnapshot(docRef, (docSnap) => {\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        const employeeData: Employee = {\n          ...data,\n          id: docSnap.id,\n          currentSessionStart: data.currentSessionStart?.toDate(),\n          loggedTasks: (data.loggedTasks || []).map((task: any) => ({\n            ...task,\n            timestamp: task.timestamp.toDate(),\n          })),\n          assignedTasks: (data.assignedTasks || []).map((task: any) => ({\n            ...task,\n            timestamp: task.timestamp.toDate(),\n          })),\n        } as Employee;\n        setEmployee(employeeData);\n      } else {\n        console.error(\"Employee data not found in Firestore.\");\n      }\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [user]);\n  \n  const handleClockIn = useCallback(async () => {\n    if (!user) return;\n    setIsVerifyingLocation(true);\n\n    const getLocation = (): Promise<GeolocationPosition> => {\n      return new Promise((resolve, reject) => {\n        if (!navigator.geolocation) {\n          reject(new Error(\"Geolocation is not supported by your browser.\"));\n        }\n        navigator.geolocation.getCurrentPosition(resolve, reject, { timeout: 10000 });\n      });\n    };\n\n    try {\n      const position = await getLocation();\n      const { latitude, longitude } = position.coords;\n      const distance = getDistance(latitude, longitude, OFFICE_COORDS.latitude, OFFICE_COORDS.longitude);\n\n      if (distance > MAX_DISTANCE_METERS) {\n        toast({\n          variant: \"destructive\",\n          title: \"Clock-in Failed\",\n          description: `You must be within ${MAX_DISTANCE_METERS} meters of the office to clock in. You are ~${Math.round(distance)}m away.`,\n        });\n        return;\n      }\n\n      await updateDoc(doc(db, \"users\", user.uid), {\n        status: \"Clocked In\",\n        currentSessionStart: new Date(),\n      });\n\n    } catch (error: any) {\n      let description = \"An unknown error occurred while verifying your location.\";\n      if (error.code === 1) description = \"Location access was denied. Please enable location permissions.\";\n      else if (error.code === 2) description = \"Your location could not be determined.\";\n      else if (error.code === 3) description = \"The request to get your location timed out.\";\n      else if (error instanceof Error) description = error.message;\n\n      toast({ variant: \"destructive\", title: \"Location Verification Failed\", description });\n    } finally {\n      setIsVerifyingLocation(false);\n    }\n  }, [user, toast]);\n\n  const handleClockOut = useCallback(async () => {\n    if (!user || !employee || employee.status !== 'Clocked In') return;\n\n    const sessionDuration = employee.currentSessionStart\n      ? (new Date().getTime() - new Date(employee.currentSessionStart).getTime()) / 3600000 // duration in hours\n      : 0;\n\n    await updateDoc(doc(db, \"users\", user.uid), {\n      status: \"Clocked Out\",\n      currentSessionStart: null,\n      accumulatedTimeToday: employee.accumulatedTimeToday + (sessionDuration * 3600000), // back to ms\n      totalHours: increment(sessionDuration)\n    });\n  }, [user, employee]);\n  \n  const handleSaveLog = async () => {\n    if (!user || !taskLog.trim()) return;\n    try {\n      const newTask: Omit<Task, 'timestamp'> = {\n        id: `task_${Date.now()}`,\n        description: taskLog,\n        status: 'completed', // Logged tasks are implicitly completed\n      }\n      await updateDoc(doc(db, \"users\", user.uid), {\n        loggedTasks: arrayUnion({\n          ...newTask,\n          timestamp: new Date(),\n        })\n      });\n      setTaskLog(\"\");\n      toast({\n          title: \"Log Saved\",\n          description: \"Your task has been successfully logged.\",\n      });\n    } catch (error: any) {\n       toast({\n        variant: \"destructive\",\n        title: \"Error Saving Log\",\n        description: error.message,\n      });\n    }\n  };\n\n  const handleCompleteTask = async (taskId: string) => {\n    if (!user || !employee) return;\n    try {\n      const updatedTasks = employee.assignedTasks.map(task =>\n        task.id === taskId ? { ...task, status: 'completed' } : task\n      );\n      await updateDoc(doc(db, \"users\", user.uid), {\n        assignedTasks: updatedTasks,\n      });\n      toast({\n        title: \"Task Completed\",\n        description: \"Great job!\",\n      });\n    } catch (error: any) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error Updating Task\",\n        description: error.message,\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", handleClockOut);\n    return () => window.removeEventListener(\"beforeunload\", handleClockOut);\n  }, [handleClockOut]);\n  \n  if (loading) {\n    return (\n       <div className=\"grid auto-rows-min gap-6 md:grid-cols-3\">\n         <Card className=\"md:col-span-1\">\n            <CardHeader><Skeleton className=\"h-8 w-3/4\" /></CardHeader>\n            <CardContent className=\"space-y-4\"><Skeleton className=\"h-24 w-full\" /></CardContent>\n            <CardFooter><Skeleton className=\"h-10 w-full\" /></CardFooter>\n          </Card>\n          <Card className=\"md:col-span-2\">\n            <CardHeader><Skeleton className=\"h-8 w-3/4\" /></CardHeader>\n            <CardContent><Skeleton className=\"h-48 w-full\" /></CardContent>\n            <CardFooter><Skeleton className=\"h-10 w-24\" /></CardFooter>\n          </Card>\n          <Card className=\"md:col-span-3\">\n            <CardHeader><Skeleton className=\"h-8 w-3/4\" /></CardHeader>\n            <CardContent><Skeleton className=\"h-32 w-full\" /></CardContent>\n          </Card>\n       </div>\n    );\n  }\n\n  if (!employee) {\n    return <div>Employee data could not be loaded.</div>;\n  }\n  \n  const isClockedIn = employee.status === \"Clocked In\";\n  const pendingTasks = employee.assignedTasks.filter(t => t.status === 'pending');\n\n  return (\n    <div className=\"grid auto-rows-min gap-6 md:grid-cols-3\">\n      <Card className=\"md:col-span-1\">\n        <CardHeader>\n          <CardTitle>Time Clock</CardTitle>\n          <CardDescription>Your current work status.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center space-x-4 rounded-md border p-4\">\n            <Clock className=\"h-6 w-6 text-muted-foreground\" />\n            <div className=\"flex-1 space-y-1\">\n              <p className=\"text-sm font-medium leading-none\">Status</p>\n              <p className={`text-sm font-semibold ${isClockedIn ? 'text-emerald-500' : 'text-muted-foreground'}`}>\n                {employee.status}\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4 rounded-md border p-4\">\n             <div className=\"flex-1 space-y-1\">\n                <p className=\"text-sm font-medium leading-none\">Hours Worked Today</p>\n                <p className=\"text-3xl font-bold font-mono\">\n                    <HoursToday\n                      status={employee.status}\n                      accumulatedTime={employee.accumulatedTimeToday}\n                      sessionStart={employee.currentSessionStart}\n                      showSeconds={true}\n                    />\n                </p>\n            </div>\n          </div>\n        </CardContent>\n        <CardFooter>\n          {isClockedIn ? (\n            <Button onClick={handleClockOut} className=\"w-full\" variant=\"destructive\">\n              <LogOut className=\"mr-2 h-4 w-4\" /> Clock Out\n            </Button>\n          ) : (\n             <Button \n              onClick={handleClockIn} \n              className=\"w-full\" \n              disabled={isVerifyingLocation}\n            >\n                {isVerifyingLocation ? (\n                    <>\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Verifying...\n                    </>\n                ) : (\n                     <>\n                        <LogIn className=\"mr-2 h-4 w-4\" /> Clock In\n                    </>\n                )}\n            </Button>\n          )}\n        </CardFooter>\n      </Card>\n\n      <Card className=\"md:col-span-2\">\n        <CardHeader>\n          <CardTitle>Daily Task Log</CardTitle>\n          <CardDescription>\n            Log your tasks for the day. This will be visible to your employer.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Textarea\n            placeholder=\"What are you working on today?\"\n            className=\"min-h-[200px] resize-none\"\n            value={taskLog}\n            onChange={(e) => setTaskLog(e.target.value)}\n          />\n        </CardContent>\n        <CardFooter>\n          <Button onClick={handleSaveLog}>Save Log</Button>\n        </CardFooter>\n      </Card>\n      \n      <Card className=\"md:col-span-3\">\n        <CardHeader>\n          <CardTitle>Assigned Tasks</CardTitle>\n          <CardDescription>\n            Tasks assigned to you by your employer. Mark them as complete when you're done.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {pendingTasks.length > 0 ? (\n            <ul className=\"space-y-4\">\n              {pendingTasks.map((task) => (\n                <li key={task.id} className=\"flex items-center justify-between rounded-md border p-4\">\n                  <div className=\"space-y-1\">\n                    <p className=\"font-medium\">{task.description}</p>\n                    <p className=\"text-sm text-muted-foreground\">Assigned by: {task.assignedBy}</p>\n                  </div>\n                  <Button size=\"sm\" onClick={() => handleCompleteTask(task.id)}>\n                    <ClipboardCheck className=\"mr-2\" /> Mark as Done\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"text-muted-foreground\">No pending tasks. Great job!</p>\n          )}\n          {employee.assignedTasks.filter(t => t.status === 'completed').length > 0 && (\n             <div className=\"mt-4\">\n                <h4 className=\"text-sm font-medium text-muted-foreground\">Completed Today</h4>\n                <ul className=\"mt-2 space-y-2\">\n                {employee.assignedTasks.filter(t => t.status === 'completed').map(task => (\n                    <li key={task.id} className=\"flex items-center gap-3 text-muted-foreground\">\n                        <ClipboardCheck className=\"text-emerald-500\" />\n                        <span className=\"line-through\">{task.description}</span>\n                    </li>\n                ))}\n                </ul>\n             </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}