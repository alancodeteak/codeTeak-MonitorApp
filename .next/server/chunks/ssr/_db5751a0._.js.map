{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/employer-dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EmployerDashboard = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmployerDashboard() from the server but EmployerDashboard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/employer-dashboard.tsx <module evaluation>\",\n    \"EmployerDashboard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iFACA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/employer-dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EmployerDashboard = registerClientReference(\n    function() { throw new Error(\"Attempted to call EmployerDashboard() from the server but EmployerDashboard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/employer-dashboard.tsx\",\n    \"EmployerDashboard\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6DACA","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/charts/total-hours-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TotalHoursChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call TotalHoursChart() from the server but TotalHoursChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/charts/total-hours-chart.tsx <module evaluation>\",\n    \"TotalHoursChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uFACA","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/charts/total-hours-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TotalHoursChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call TotalHoursChart() from the server but TotalHoursChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/charts/total-hours-chart.tsx\",\n    \"TotalHoursChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mEACA","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/charts/daily-hours-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DailyHoursChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call DailyHoursChart() from the server but DailyHoursChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/charts/daily-hours-chart.tsx <module evaluation>\",\n    \"DailyHoursChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uFACA","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/charts/daily-hours-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DailyHoursChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call DailyHoursChart() from the server but DailyHoursChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/charts/daily-hours-chart.tsx\",\n    \"DailyHoursChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,mEACA","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/charts/status-donut-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StatusDonutChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call StatusDonutChart() from the server but StatusDonutChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/charts/status-donut-chart.tsx <module evaluation>\",\n    \"StatusDonutChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,wFACA","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/charts/status-donut-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const StatusDonutChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call StatusDonutChart() from the server but StatusDonutChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/charts/status-donut-chart.tsx\",\n    \"StatusDonutChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,oEACA","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/admin-dashboard.tsx"],"sourcesContent":["import type { Employee } from \"@/lib/types\";\nimport { EmployerDashboard } from \"./employer-dashboard\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { TotalHoursChart } from \"./charts/total-hours-chart\";\nimport { DailyHoursChart } from \"./charts/daily-hours-chart\";\nimport { StatusDonutChart } from \"./charts/status-donut-chart\";\n\ninterface AdminDashboardProps {\n  employees: Employee[];\n  dailyHours: { date: string; hours: number }[];\n}\n\nexport function AdminDashboard({ employees, dailyHours }: AdminDashboardProps) {\n  return (\n    <div className=\"space-y-6\">\n      <EmployerDashboard employees={employees} />\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Analytics</CardTitle>\n          <CardDescription>\n            Key metrics and trends for your organization.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Team Status Distribution</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <StatusDonutChart employees={employees} />\n              </CardContent>\n            </Card>\n            <Card className=\"lg:col-span-2\">\n              <CardHeader>\n                <CardTitle>Total Hours per Employee (Last 30 Days)</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <TotalHoursChart employees={employees} />\n              </CardContent>\n            </Card>\n            <Card className=\"lg:col-span-3\">\n              <CardHeader>\n                <CardTitle>Daily Hours Trend (All Employees)</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <DailyHoursChart dailyHours={dailyHours} />\n              </CardContent>\n            </Card>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAOA;AACA;AACA;;;;;;;AAOO,SAAS,eAAe,EAAE,SAAS,EAAE,UAAU,EAAuB;IAC3E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,wJAAA,CAAA,oBAAiB;gBAAC,WAAW;;;;;;0BAE9B,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;;0CACT,8OAAC,gIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAInB,8OAAC,gIAAA,CAAA,cAAW;kCACV,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,gIAAA,CAAA,OAAI;;sDACH,8OAAC,gIAAA,CAAA,aAAU;sDACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;0DAAC;;;;;;;;;;;sDAEb,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,qKAAA,CAAA,mBAAgB;gDAAC,WAAW;;;;;;;;;;;;;;;;;8CAGjC,8OAAC,gIAAA,CAAA,OAAI;oCAAC,WAAU;;sDACd,8OAAC,gIAAA,CAAA,aAAU;sDACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;0DAAC;;;;;;;;;;;sDAEb,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,oKAAA,CAAA,kBAAe;gDAAC,WAAW;;;;;;;;;;;;;;;;;8CAGhC,8OAAC,gIAAA,CAAA,OAAI;oCAAC,WAAU;;sDACd,8OAAC,gIAAA,CAAA,aAAU;sDACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;0DAAC;;;;;;;;;;;sDAEb,8OAAC,gIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,oKAAA,CAAA,kBAAe;gDAAC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7C","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import type { Employee } from './types';\n\nexport const mockEmployees: Employee[] = [\n  {\n    id: '1',\n    name: 'Alice Johnson',\n    email: 'alice@example.com',\n    role: 'employee',\n    status: 'Clocked In',\n    currentSessionStart: new Date(new Date().setHours(new Date().getHours() - 2)),\n    accumulatedTimeToday: 1.5 * 3600 * 1000, // 1.5 hours from previous sessions today\n    tasks: [{ id: 't1', description: 'Worked on feature X.', timestamp: new Date() }],\n    totalHours: 7.5,\n  },\n  {\n    id: '2',\n    name: 'Bob Williams',\n    email: 'bob@example.com',\n    role: 'employee',\n    status: 'Clocked Out',\n    accumulatedTimeToday: 8 * 3600 * 1000, // 8 hours total for the day\n    tasks: [{ id: 't2', description: 'Client meeting and follow-up emails.', timestamp: new Date() }],\n    totalHours: 8.0,\n  },\n  {\n    id: '3',\n    name: 'Charlie Brown',\n    email: 'charlie@example.com',\n    role: 'employee',\n    status: 'On Break',\n    accumulatedTimeToday: 4 * 3600 * 1000, // Was working for 4 hours, now on break\n    tasks: [{ id: 't3', description: 'Initial project setup for Project Y.', timestamp: new Date() }],\n    totalHours: 6.2,\n  },\n  {\n    id: '4',\n    name: 'Diana Prince',\n    email: 'diana@example.com',\n    role: 'employee',\n    status: 'Clocked In',\n    currentSessionStart: new Date(new Date().setHours(new Date().getHours() - 1)),\n    accumulatedTimeToday: 4 * 3600 * 1000, // 4 hours from previous sessions today\n    tasks: [{ id: 't4', description: 'Debugging production issue.', timestamp: new Date() }],\n    totalHours: 5.8,\n  },\n    {\n    id: '5',\n    name: 'Ethan Hunt',\n    email: 'ethan@example.com',\n    role: 'employee',\n    status: 'Clocked Out',\n    accumulatedTimeToday: 8.1 * 3600 * 1000,\n    tasks: [{ id: 't5', description: 'Completed quarterly report.', timestamp: new Date() }],\n    totalHours: 8.1,\n  },\n];\n\nexport const dailyHoursData = [\n  { date: 'Mon', hours: 32 },\n  { date: 'Tue', hours: 40 },\n  { date: 'Wed', hours: 38 },\n  { date: 'Thu', hours: 45 },\n  { date: 'Fri', hours: 42 },\n  { date: 'Sat', hours: 10 },\n  { date: 'Sun', hours: 4 },\n];\n"],"names":[],"mappings":";;;;AAEO,MAAM,gBAA4B;IACvC;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,qBAAqB,IAAI,KAAK,IAAI,OAAO,QAAQ,CAAC,IAAI,OAAO,QAAQ,KAAK;QAC1E,sBAAsB,MAAM,OAAO;QACnC,OAAO;YAAC;gBAAE,IAAI;gBAAM,aAAa;gBAAwB,WAAW,IAAI;YAAO;SAAE;QACjF,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,sBAAsB,IAAI,OAAO;QACjC,OAAO;YAAC;gBAAE,IAAI;gBAAM,aAAa;gBAAwC,WAAW,IAAI;YAAO;SAAE;QACjG,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,sBAAsB,IAAI,OAAO;QACjC,OAAO;YAAC;gBAAE,IAAI;gBAAM,aAAa;gBAAwC,WAAW,IAAI;YAAO;SAAE;QACjG,YAAY;IACd;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,qBAAqB,IAAI,KAAK,IAAI,OAAO,QAAQ,CAAC,IAAI,OAAO,QAAQ,KAAK;QAC1E,sBAAsB,IAAI,OAAO;QACjC,OAAO;YAAC;gBAAE,IAAI;gBAAM,aAAa;gBAA+B,WAAW,IAAI;YAAO;SAAE;QACxF,YAAY;IACd;IACE;QACA,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,sBAAsB,MAAM,OAAO;QACnC,OAAO;YAAC;gBAAE,IAAI;gBAAM,aAAa;gBAA+B,WAAW,IAAI;YAAO;SAAE;QACxF,YAAY;IACd;CACD;AAEM,MAAM,iBAAiB;IAC5B;QAAE,MAAM;QAAO,OAAO;IAAG;IACzB;QAAE,MAAM;QAAO,OAAO;IAAG;IACzB;QAAE,MAAM;QAAO,OAAO;IAAG;IACzB;QAAE,MAAM;QAAO,OAAO;IAAG;IACzB;QAAE,MAAM;QAAO,OAAO;IAAG;IACzB;QAAE,MAAM;QAAO,OAAO;IAAG;IACzB;QAAE,MAAM;QAAO,OAAO;IAAE;CACzB","debugId":null}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/admin/page.tsx"],"sourcesContent":["import { AdminDashboard } from \"@/components/dashboard/admin-dashboard\";\nimport { mockEmployees, dailyHoursData } from \"@/lib/data\";\n\nexport default function AdminPage() {\n    return <AdminDashboard employees={mockEmployees} dailyHours={dailyHoursData} />;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACpB,qBAAO,8OAAC,qJAAA,CAAA,iBAAc;QAAC,WAAW,kHAAA,CAAA,gBAAa;QAAE,YAAY,kHAAA,CAAA,iBAAc;;;;;;AAC/E","debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAMhG,8BAA8B;IAI5BI,SAASC;;;;;;;;;;;;;AAIX,cAAc,0CAA0C,iBAAA;IAAE,MAAA,kBAAwB;AAAsB,EAAC,IAAA,OAAA;IAAA;IAAA;QAEzG,YAAA;YAAA;YAAA,kCAA4D;gBAC5D,OAAO,KAAA;oBAAMG;oBAAAA,KAAc,IAAIX,mBAAmB;4BAChDY,QAAAA;4BAAAA,GAAY;4BAAA;iCACVC,MAAMZ,UAAUa,QAAQ;sCACxBC,IAAAA,CAAM,CAAA;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACNC,UAAU;;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;oBAAAA;iBAAAA,CAAY;;iBACZC,UAAU;sBACVC,IAAAA,CAAAA,GAAU;gBAAA,CAAE,SAAA;oBAAA,IAAA;oBAAA;iBAAA;;WACd;;KACAC,UAAU;cACRC,IAAAA;YAAAA,GAAYnB,GAAAA;gBACd,OAAA,QAAA;wBAAA;4BACA,KAAA,CAAA,GAAA,4MAAA,CAAA,sBAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA","ignoreList":[0],"debugId":null}}]
}